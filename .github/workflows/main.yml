name: Build & Test CI

on:
  pull_request:
    branches:
      - master
      - test
      - production
  push:
    branches:
      - master
      - test
      - production
      - test-deploy

jobs:
  elixir-build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Configure 🔧
      run: cp oli.example.env oli.env && cp postgres.example.env postgres.env

    - name: Start Test Database 🗄
      run: docker-compose up -d postgres

    - name: Setup Elixir 🧪
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.10.2 # Define the elixir version [required]
        otp-version: 22.2 # Define the OTP version [required]

    - name: Install Elixir Dependencies ⬇️
      run: mix deps.get

    - name: Build Dependencies 🔨📦
      run: mix deps.compile

    - name: Build Project 🔨
      run: set -a;source oli.env && mix clean && mix compile --warnings-as-errors

    - name: Run Tests ⚙️
      run: set -a;source oli.env && mix test.coverage

  ts-build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Configure 🔧
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Setup Elixir 🧪
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.10.2 # Define the elixir version [required]
        otp-version: 22.2 # Define the OTP version [required]

    - name: Install Elixir Dependencies ⬇️
      run: mix deps.get

    - name: Install node_module Dependencies 📦
      run: cd assets && npm install

    - name: Lint 🧹
      run: cd assets && npm run lint

    - name: Build 🔨
      run: cd assets && npm run deploy

    - name: Test ⚙️
      run: cd assets && npm run test

  build-release:
    needs: [elixir-build-test, ts-build-test]

    # only run this job if the workflow is running on the master branch
    # if: github.ref == 'refs/heads/master'
    if: github.ref == 'refs/heads/test-deploy'

    container:
      image: amazonlinux:2
      env:
        MIX_ENV: prod
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Setup elixir 🧪
        uses: actions/setup-elixir@v1
        with:
          elixir-version: 1.10.2 # Define the elixir version [required]
          otp-version: 22.2 # Define the OTP version [required]

      - name: Setup node 🔧
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install elixir dependencies ⬇️
        run: mix deps.get --only prod

      - name: Compile elixir 🔨
        run: mix compile

      - name: Install / update  JavaScript dependencies ⬇️
        run: npm install --prefix ./assets

      - name: Compile JavaScript assets 🔨
        run: |
          npm run deploy --prefix ./assets
          mix phx.digest

      - name: Package release 📦
        run: mix release

      - uses: actions/upload-artifact@v2
        with:
          name: oli-release-${{ GITHUB_SHA }}
          path: _build/prod/rel/oli

      # - name: Upload release to S3 📦⬆️
      # - uses: jakejarvis/s3-sync-action@master
      #   # with:
      #   #   args: --acl public-read --follow-symlinks --delete
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-2'
      #     SOURCE_DIR: '_build/prod/rel/oli'
      #     DEST_DIR: ${{ GITHUB_SHA }}

  deploy:


