<div class="objectives container">
  <h2>Course Objectives</h2>
  <p class="text-secondary">
    Learning objectives help you to organize course content and determine appropriate assessments and instructional strategies.
    Visit the <a href="https://www.cmu.edu/teaching/designteach/design/learningobjectives.html" target="_blank">CMU Eberly Center guide on learning objectives</a> to learn more about the importance of attaching learning objectives to pages and activities.
  </p>

  <div class="row my-3">
    <div class="col-12">
      <h4>Create a new objective</h4>
      <%= label "create-objective", "At the end of this course, students should be able to...", class: "control-label" %>
      <%=
        route = Routes.objective_path(@conn, :create, @project)
        render OliWeb.ProjectView, "_objective_render.html",
        %{conn: @conn, project: @project, objective_changeset: @objective_changeset, title_value: "", parent_slug_value: "",
        form_id: "create-objective", method: "post", route: route, place_holder: "e.g. Recognize the structures of amino acids, carbohydrates, lipids, and nucleic acids",
        phx_disable_with: "Adding Objective...", button_text: "Create", mode: :new_objectve} %>
    </div>
  </div>

  <%= if Enum.count(@objective_mappings) == 0 do %>
    <div class="row my-3">
      <div class="col-12">
        <div class="text-center">
          No objectives
        </div>
      </div>
    </div>
  <% else %>
    <div class="row my-3">
      <div class="col-12">
        <h4>Manage objectives</h4>
        <div class="list-group w-100">
          <%=
          Enum.map(@objective_mappings, fn x ->
              params = %{conn: @conn, objective_mapping: x.mapping, children: x.children, depth: 1, project: @project, objective_changeset: @objective_changeset}
              if assigns[:edit] do
                  params = Map.merge(params, %{edit: @edit})
                  render OliWeb.ProjectView, "_objectives_list.html", params
              else
                  params = Map.merge(params, %{edit: :none})
                  render OliWeb.ProjectView, "_objectives_list.html", params
              end
          end)
          %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<script>
  // Process objective form
  document.querySelectorAll(".ob-form-button").forEach(
      (element) => {
          console.log("buttons "+element.id);
          const titleInput = document.getElementById("input-title-"+element.id);
          element.disabled = !titleInput.value || titleInput.value.length === 0;

          titleInput.addEventListener('input', () => titleInput.value.length > 0
            ? element.disabled = false
            : element.disabled = true);

          element.addEventListener('click', (e) => {
            if (!element.disabled) {
              const form = document.getElementById("form-"+element.id);
              form.submit();
            }
          })
      }
  );
</script>
